name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SERVER_IP: ${{ secrets.PRODUCTION_SERVER_IP }}
  API_KEY: ${{ secrets.DEPLOY_API_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements_dev.txt

      # Add diagnostics to check environment
      - name: Print Python version
        run: python --version

      - name: Check installed packages
        run: pip list

      - name: Verify PYTHONPATH
        run: echo $PYTHONPATH

      # Debug step to print the working directory
      - name: Print working directory
        run: pwd

      # Step to verify the content of the src directory
      - name: List src directory content
        run: ls -R 

      # Step 4: Run tests
      - name: Run tests with pytest
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        run: |
          pytest

      # Run tests with coverage
      - name: Run tests with coverage
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        run: |
          pytest --cov=home_buying_app --cov-report=xml
      
      # Upload coverage report
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      # Step 6: Add diagnostics to check environment
      - name: Print Python version
        run: python --version

      - name: Check installed packages
        run: pip list
      
      # # OPTIONAL: Add Code Coverage Badge
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Deploy only from main branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Deploy to Production
        run: |
          echo "Deploying application..."
          # Add your custom deployment command here
          # For example: scp files to server, or deploy to AWS/GCP